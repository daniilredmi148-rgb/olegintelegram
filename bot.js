import { Telegraf } from 'telegraf';
import { message } from 'telegraf/filters';
import express from 'express';

const app = express();
const PORT = process.env.PORT || 3000;

app.use(express.json());
app.get('/', (req, res) => {
  res.json({ 
    status: 'OK', 
    bot: 'Oleg is running',
    timestamp: new Date().toISOString()
  });
});

app.listen(PORT, () => {
  console.log(`Server running on port ${PORT}`);
});

const bot = new Telegraf(process.env.BOT_TOKEN);

// –ö–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ —á–∞—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º —Å–ª–µ–Ω–≥–æ–º –∏ –º–µ–º–∞–º–∏
const specificAnswers = {
  music: [
    '–ú–æ—è –ª—é–±–∏–º–∞—è –º—É–∑—ã–∫–∞ - –∫–ª–∞—Å—Å–∏—á–µ—Å–∫–∏–π —Ä–æ–∫, –æ—Å–æ–±–µ–Ω–Ω–æ Queen –∏ The Beatles, —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –∫—Ä–∏–Ω–∂–æ–≤–æ, –Ω–æ –º–Ω–µ –∑–∞—Ö–æ–¥–∏—Ç üòé',
    '–û–±–æ–∂–∞—é —ç–ª–µ–∫—Ç—Ä–æ–Ω–Ω—É—é –º—É–∑—ã–∫—É, –≤ —á–∞—Å—Ç–Ω–æ—Å—Ç–∏ Daft Punk –∏ Kraftwerk - —ç—Ç–æ –º–æ–π –≤–∏–±, –±—Ä–æ üí´',
    '–ü—Ä–µ–¥–ø–æ—á–∏—Ç–∞—é –¥–∂–∞–∑ - –ú–∞–π–ª–∑ –î—ç–≤–∏—Å –∏ –î–∂–æ–Ω –ö–æ–ª—Ç—Ä–µ–π–Ω –º–æ–∏ —Ñ–∞–≤–æ—Ä–∏—Ç—ã, —Ç–∞–∫–æ–π —Å–∞—É–Ω–¥ - –ø—Ä–æ—Å—Ç–æ –ø—É—à–∫–∞! üé∑',
    '–õ—é–±–ª—é —Ä—É—Å—Å–∫–∏–π —Ä–æ–∫ - –ö–∏–Ω–æ, –î–î–¢, –ù–∞—É—Ç–∏–ª—É—Å –ü–æ–º–ø–∏–ª–∏—É—Å, —ç—Ç–æ –Ω–∞—à–µ –≤—Å—ë, –∫–∞–∫ –≥–æ–≤–æ—Ä–∏—Ç—Å—è "—ç—Ç–æ –±–∞–∑–∞" üá∑üá∫',
    '–°–ª—É—à–∞—é –≤ –æ—Å–Ω–æ–≤–Ω–æ–º —Å–∞—É–Ω–¥—Ç—Ä–µ–∫–∏ –∫ —Ñ–∏–ª—å–º–∞–º, –æ—Å–æ–±–µ–Ω–Ω–æ –•–∞–Ω—Å–∞ –¶–∏–º–º–µ—Ä–∞ - —Ç–∞–∫–æ–π —Å–∞—É–Ω–¥—Ç—Ä–µ–∫ –ø—Ä–æ—Å—Ç–æ –∞—Ç–∞—Å! üé¨'
  ],
  
  movies: [
    '–ú–æ–π –ª—é–±–∏–º—ã–π —Ñ–∏–ª—å–º - "–ù–∞—á–∞–ª–æ" –ö—Ä–∏—Å—Ç–æ—Ñ–µ—Ä–∞ –ù–æ–ª–∞–Ω–∞, —ç—Ç–æ –ø—Ä–æ—Å—Ç–æ –º–æ–∑–≥ –≤–∑—Ä—ã–≤–∞–µ—Ç, –≤–∞—â–µ –∞—Ç–∞—Å! üåÄ',
    '–û–±–æ–∂–∞—é "–ö—Ä–∏–º–∏–Ω–∞–ª—å–Ω–æ–µ —á—Ç–∏–≤–æ" –¢–∞—Ä–∞–Ω—Ç–∏–Ω–æ - —Ç–∞–∫–æ–π —Å—Ç–∏–ª—å, –ø—Ä–æ—Å—Ç–æ –±–æ–º–±–∞ –±–µ–∑ –±–∞–≥–æ–≤ üí£',
    '–õ—é–±–ª—é —Å–æ–≤–µ—Ç—Å–∫–∏–µ –∫–æ–º–µ–¥–∏–∏ - "–ò—Ä–æ–Ω–∏—è —Å—É–¥—å–±—ã" –∏ "–û–ø–µ—Ä–∞—Ü–∏—è –´" - —ç—Ç–æ –Ω–∞—à–µ –Ω–∞—Å–ª–µ–¥–∏–µ, —Ä–∏–ª—Ç–æ–∫ —Å–º–µ—à–Ω–æ üòÇ'
  ]
};

// –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –±–∞–∑–∞ –º–µ–º–Ω—ã—Ö —Ñ—Ä–∞–∑
const memePhrases = [
  '–≠—Ç–æ –±–∞–∑–∞! üí™',
  '–ë–µ–∑ –∫—Ä–∏–Ω–∂–∞! üòé',
  '–í–∞—â–µ –∞—Ç–∞—Å! üî•',
  '–ü—Ä–æ—Å—Ç–æ –∫—Ä–∞—à! üí•',
  '–¢–∞–∫–æ–π –≤–∞–π–±! üåü',
  '–†–∏–ª—Ç–æ–∫ —Å–º–µ—à–Ω–æ! üòÇ',
  '–ü—Ä–æ—Å—Ç–æ –ø—É—à–∫–∞! üöÄ',
  '–ó–∞–ª–∏–ø–∞—é –≤–∞—â–µ –æ—Ç–ø–∞–¥! ü§Ø',
  '–¢–∞–∫–æ–π –∑–∞–º–µ—Å, –ø—Ä–æ—Å—Ç–æ –∞–≥–æ–Ω—å! üí´',
  '–≠—Ç–æ –±—É–¥—É—â–µ–µ! üëÅÔ∏è',
  '–¢–£–ù–ì –¢–£–ù–ì! ü•Å',
  '–°–ê–•–£–† –°–ê–•–£–†! üåÖ',
  '–ü–ò–ü–ò –ü–ò–ü–ò! üê¶',
  '–ö–ò–í–ò –ö–ò–í–ò! ü•ù',
  '–•–û–ú–û–ö–ê–§–ï! ‚òï',
  '–ò–ë–ê–ß–û–¢–ï–ù–¨–ö–ê! üéÄ',
  '–ò–ë–ê–ù–ï–ß–û–¢–ï–ù–ö–ê! üå∏',
  '–ü—Ä–æ—Å—Ç–æ —É–ª–µ—Ç! üõ∏',
  '–¢–∞–∫–æ–π deep! üß†',
  'Guilty pleasure! üôà'
];

// –•–∞—Ä–∞–∫—Ç–µ—Ä–∏—Å—Ç–∏–∫–∏ –¥–ª—è –∫–æ–º–∞–Ω–¥—ã /status —Å –Ω–æ–≤—ã–º–∏ –º–µ–º–Ω—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
const userCharacteristics = [
  '–≥–ª–∞–≤–Ω—ã–π –º–µ–º–æ–ª–æ–≥ –≥—Ä—É–ø–ø—ã',
  '–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π –∑–∞–ª–∏–ø–∞—Ç–µ–ª—å –≤ —Ç–µ–ª–µ–≥–µ',
  '–º–∞—Å—Ç–µ—Ä –∫—Ä–∞—à-—Ç–µ—Å—Ç–æ–≤',
  '–Ω–æ—Å–∏—Ç–µ–ª—å —Å–∞–º–æ–≥–æ —Å–∏–ª—å–Ω–æ–≥–æ –≤–∞–π–±–∞',
  '—ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∫—Ä–∏–Ω–∂–µ–≤—ã–º —Å–∏—Ç—É–∞—Ü–∏—è–º',
  '–≥—É—Ä—É —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ç—Ä–µ–Ω–¥–æ–≤',
  '—á–µ–º–ø–∏–æ–Ω –ø–æ –∑–∞–ª–∏–ø–∞–Ω–∏—é',
  '–≤–ª–∞–¥–µ–ª–µ—Ü —Å–∞–º–æ–≥–æ –∫—Ä—É—Ç–æ–≥–æ –≤–∏–±–∞',
  '–ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä –º–µ–º–æ–ª–æ–≥–∏–∏',
  '–≥–ª–∞–≤–Ω—ã–π –ø–æ –∞—Ç–º–æ—Å—Ñ–µ—Ä–µ –¢–£–ù–ì –¢–£–ù–ì',
  '–Ω–æ—Å–∏—Ç–µ–ª—å –±–∞–∑—ã –∑–Ω–∞–Ω–∏–π –°–ê–•–£–†',
  '–º–∞—Å—Ç–µ—Ä –±–µ–∑–±–∞–∂–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –ü–ò–ü–ò',
  '—ç–∫—Å–ø–µ—Ä—Ç –ø–æ –∞–≥–æ–Ω—å-–∫–æ–Ω—Ç–µ–Ω—Ç—É –ö–ò–í–ò',
  '—á–µ–º–ø–∏–æ–Ω –ø–æ –ø—É—à–µ—á–Ω—ã–º –æ—Ç–≤–µ—Ç–∞–º –•–û–ú–û–ö–ê–§–ï',
  '–≥—É—Ä—É –≥–ª—É–±–æ–∫–∏—Ö —Ç–µ–º –ò–ë–ê–ß–û–¢–ï–ù–¨–ö–ê',
  '–≤–ª–∞–¥–µ–ª–µ—Ü –∏–º–º–µ—Ä—Å–∏–≤–Ω–æ–≥–æ –æ–ø—ã—Ç–∞ –ò–ë–ê–ù–ï–ß–û–¢–ï–ù–ö–ê',
  '–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª –ø–æ –æ—Ç–ø–∞–¥–Ω—ã–º —à—É—Ç–∫–∞–º –¢–£–ù–ì',
  '–Ω–æ—Å–∏—Ç–µ–ª—å –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–≥–æ —Å—Ç–∏–ª—è –°–ê–•–£–†',
  '–º–∞—Å—Ç–µ—Ä –∞—Ç–∞—Å–Ω—ã—Ö —Ä–µ—à–µ–Ω–∏–π –ü–ò–ü–ò',
  '—ç–∫—Å–ø–µ—Ä—Ç –ø–æ —É–ª–µ—Ç–Ω—ã–º —Ç–µ–º–∞–º –ö–ò–í–ò',
  '—á–µ–º–ø–∏–æ–Ω –ø–æ –±—É–¥—É—â–∏–º —Ç—Ä–µ–Ω–¥–∞–º –•–û–ú–û–ö–ê–§–ï',
  '–≥—É—Ä—É –Ω–∞—Å—Ç—Ä–æ–µ–Ω—á–µ—Å–∫–∏—Ö –≤–∏–±–æ–≤ –ò–ë–ê–ß–û–¢–ï–ù–¨–ö–ê',
  '–≤–ª–∞–¥–µ–ª–µ—Ü —à–µ–¥–µ–≤—Ä–∞–ª—å–Ω—ã—Ö –∏–¥–µ–π –ò–ë–ê–ù–ï–ß–û–¢–ï–ù–ö–ê',
  '–ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª –ø–æ –∫–∞–π—Ñ–æ–≤—ã–º —Ç–µ–º–∞–º –¢–£–ù–ì –¢–£–ù–ì',
  '–Ω–æ—Å–∏—Ç–µ–ª—å –æ—Ö—Ä–µ–Ω–µ—Ç–∏—Ç–µ–ª—å–Ω—ã—Ö –º—ã—Å–ª–µ–π –°–ê–•–£–† –°–ê–•–£–†',
  '–º–∞–≥–∏—Å—Ç—Ä –ø–∏–ø–∏-–Ω–∞—É–∫',
  '–¥–æ–∫—Ç–æ—Ä –∫–∏–≤–∏-—Ñ–∏–ª–æ—Å–æ—Ñ–∏–∏',
  '–ø—Ä–æ—Ñ–µ—Å—Å–æ—Ä —Ö–æ–º–æ–∫–∞—Ñ–µ-–ª–æ–≥–∏–∏',
  '–∞–∫–∞–¥–µ–º–∏–∫ –∏–±–∞—á–æ—Ç–µ–Ω—å–∫–∞-–≤–µ–¥–µ–Ω–∏—è',
  '—ç–∫—Å–ø–µ—Ä—Ç –∏–±–∞–Ω–µ—á–æ—Ç–µ–Ω–∫–∞-–ª–æ–≥–∏—Å—Ç–∏–∫–∏'
];

const userActivities = [
  '—Å–µ–π—á–∞—Å –∑–∞–ª–∏–ø–∞–µ—Ç –≤ –º–µ–º–∞—Ö –¢–£–ù–ì –¢–£–ù–ì',
  '–ø—Ä–æ—Ö–æ–¥–∏—Ç –∫—Ä–∞—à-—Ç–µ—Å—Ç –Ω–∞ –ø—Ä–æ—á–Ω–æ—Å—Ç—å –°–ê–•–£–†',
  '–ª–æ–≤–∏—Ç –≤–∞–π–± –≤—Å–µ–ª–µ–Ω–Ω–æ–π –ü–ò–ü–ò',
  '—Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π –≤–∏–± –ö–ò–í–ò',
  '–∏–∑—É—á–∞–µ—Ç –∫—Ä–∏–Ω–∂–æ–≤—ã–µ —Å–∏—Ç—É–∞—Ü–∏–∏ –•–û–ú–û–ö–ê–§–ï',
  '–æ—Ç—Ç–∞—á–∏–≤–∞–µ—Ç –º–∞—Å—Ç–µ—Ä—Å—Ç–≤–æ –∑–∞–ª–∏–ø–∞–Ω–∏—è –ò–ë–ê–ß–û–¢–ï–ù–¨–ö–ê',
  '–∏—â–µ—Ç –±–∞–∑—É –∑–Ω–∞–Ω–∏–π –ò–ë–ê–ù–ï–ß–û–¢–ï–ù–ö–ê',
  '—Å–æ–∑–¥–∞–µ—Ç –∞–≥–æ–Ω—å-–∫–æ–Ω—Ç–µ–Ω—Ç –¢–£–ù–ì',
  '—Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø—É—à–µ—á–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã –°–ê–•–£–†',
  '–ø–æ–≥—Ä—É–∂–∞–µ—Ç—Å—è –≤ deep-—Ç–µ–º—ã –ü–ò–ü–ò',
  '—Ç–µ—Å—Ç–∏—Ä—É–µ—Ç –∏–º–º–µ—Ä—Å–∏–≤–Ω—ã–π –æ–ø—ã—Ç –ö–ò–í–ò',
  '–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ç–ø–∞–¥–Ω—ã–µ —à—É—Ç–∫–∏ –•–û–ú–û–ö–ê–§–ï',
  '—Å–æ–∑–¥–∞–µ—Ç –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω—ã–π —Å—Ç–∏–ª—å –ò–ë–ê–ß–û–¢–ï–ù–¨–ö–ê',
  '—Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –∞—Ç–∞—Å–Ω—ã–µ —Ä–µ—à–µ–Ω–∏—è –ò–ë–ê–ù–ï–ß–û–¢–ï–ù–ö–ê',
  '–∏—Å—Å–ª–µ–¥—É–µ—Ç —É–ª–µ—Ç–Ω—ã–µ —Ç–µ–º—ã –¢–£–ù–ì –¢–£–ù–ì',
  '–ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –±—É–¥—É—â–∏–µ —Ç—Ä–µ–Ω–¥—ã –°–ê–•–£–† –°–ê–•–£–†',
  '–Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ—Ç –Ω–∞—Å—Ç—Ä–æ–µ–Ω—á–µ—Å–∫–∏–π –≤–∏–± –ü–ò–ü–ò –ü–ò–ü–ò',
  '—Å–æ–∑–¥–∞–µ—Ç —à–µ–¥–µ–≤—Ä–∞–ª—å–Ω—ã–µ –∏–¥–µ–∏ –ö–ò–í–ò –ö–ò–í–ò',
  '–∏—â–µ—Ç –∫–∞–π—Ñ–æ–≤—ã–µ —Ç–µ–º—ã –•–û–ú–û–ö–ê–§–ï –•–û–ú–û–ö–ê–§–ï',
  '–≥–µ–Ω–µ—Ä–∏—Ä—É–µ—Ç –æ—Ö—Ä–µ–Ω–µ—Ç–∏—Ç–µ–ª—å–Ω—ã–µ –º—ã—Å–ª–∏ –ò–ë–ê–ß–û–¢–ï–ù–¨–ö–ê –ò–ë–ê–ß–û–¢–ï–ù–¨–ö–ê',
  '—Ç—É–Ω–≥—É–µ—Ç —Ç—É–Ω–≥–∏',
  '—Å–∞—Ö—É—Ä–∏—Ç —Å–∞—Ö—É—Ä—ã',
  '–ø–∏–ø–∏–∫–∞–µ—Ç –ø–∏–ø–∏–∫–∏',
  '–∫–∏–≤–∏—Ä—É–µ—Ç –∫–∏–≤–∏—Å—ã',
  '—Ö–æ–º–æ–∫–∞—Ñ–µ–∏—Ç –∫–æ—Ñ–µ',
  '–∏–±–∞—á–æ—Ç–µ–Ω—å–∫–∞–µ—Ç –Ω–µ–∂–Ω–æ—Å—Ç–∏',
  '–∏–±–∞–Ω–µ—á–æ—Ç–µ–Ω–∫–∞–µ—Ç –∫—Ä–∞—Å–æ—Ç—É',
  '—Å–æ–∑–¥–∞–µ—Ç —Ç—É–Ω–≥-—Å–∞—Ö—É—Ä –∫–æ–º–±–∏–Ω–∞—Ü–∏–∏',
  '—Ä–∞–∑—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –ø–∏–ø–∏-–∫–∏–≤–∏ —Å–∏—Å—Ç–µ–º—ã',
  '–æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç —Ö–æ–º–æ–∫–∞—Ñ–µ-–ø—Ä–æ—Ü–µ—Å—Å—ã'
];

const userStatuses = [
  '–≤ –ø–æ–ª–Ω–æ–º –∞–∂—É—Ä–µ –¢–£–ù–ì –¢–£–ù–ì',
  '–≤ —Ä–µ–∂–∏–º–µ –∫—Ä–∞—à-—Ç–µ—Å—Ç–∞ –°–ê–•–£–†',
  '–Ω–∞ –≤–æ–ª–Ω–µ –ø–æ–∑–∏—Ç–∏–≤–∞ –ü–ò–ü–ò',
  '–≤ –ø–æ–∏—Å–∫–∞—Ö –≤–∞–π–±–∞ –ö–ò–í–ò',
  '–≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –∑–∞–ª–∏–ø–∞–Ω–∏—è –•–û–ú–û–ö–ê–§–ï',
  '–≤ —Ä–µ–∂–∏–º–µ –±–µ–∑ –∫—Ä–∏–Ω–∂–∞ –ò–ë–ê–ß–û–¢–ï–ù–¨–ö–ê',
  '–Ω–∞ –ø–∏–∫–µ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏ –ò–ë–ê–ù–ï–ß–û–¢–ï–ù–ö–ê',
  '–≤ –ø–æ–∏—Å–∫–∞—Ö –±–∞–∑—ã –¢–£–ù–ì',
  '–≤ –∞–≥–æ–Ω—å-–Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏ –°–ê–•–£–†',
  '–≤ –ø—É—à–µ—á–Ω–æ–π —Ñ–æ—Ä–º–µ –ü–ò–ü–ò',
  '–≤ deep-—Ä–∞–∑–º—ã—à–ª–µ–Ω–∏—è—Ö –ö–ò–í–ò',
  '–≤ –∏–º–º–µ—Ä—Å–∏–≤–Ω–æ–º –æ–ø—ã—Ç–µ –•–û–ú–û–ö–ê–§–ï',
  '–≤ –æ—Ç–ø–∞–¥–Ω–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏ –ò–ë–ê–ß–û–¢–ï–ù–¨–ö–ê',
  '–≤ –ª–µ–≥–µ–Ω–¥–∞—Ä–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –ò–ë–ê–ù–ï–ß–û–¢–ï–ù–ö–ê',
  '–≤ –∞—Ç–∞—Å–Ω–æ–π —Ñ–∞–∑–µ –¢–£–ù–ì –¢–£–ù–ì',
  '–≤ —É–ª–µ—Ç–Ω–æ–º —Ä–∞—Å–ø–æ–ª–æ–∂–µ–Ω–∏–∏ –¥—É—Ö–∞ –°–ê–•–£–† –°–ê–•–£–†',
  '–≤ –±—É–¥—É—â–∏—Ö —Ç—Ä–µ–Ω–¥–∞—Ö –ü–ò–ü–ò –ü–ò–ü–ò',
  '–≤ –Ω–∞—Å—Ç—Ä–æ–µ–Ω—á–µ—Å–∫–æ–º –≤–∏–±–µ –ö–ò–í–ò –ö–ò–í–ò',
  '–≤ —à–µ–¥–µ–≤—Ä–∞–ª—å–Ω–æ–º —Å–æ—Å—Ç–æ—è–Ω–∏–∏ –•–û–ú–û–ö–ê–§–ï –•–û–ú–û–ö–ê–§–ï',
  '–≤ –∫–∞–π—Ñ–æ–≤–æ–º –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–∏ –ò–ë–ê–ß–û–¢–ï–ù–¨–ö–ê –ò–ë–ê–ß–û–¢–ï–ù–¨–ö–ê',
  '–≤ –∏–±–∞–Ω–µ—á–æ—Ç–µ–Ω–∫–∞-—ç–∫—Å—Ç–∞–∑–µ',
  '–≤ –ø–∏–ø–∏-–≤–æ—Å—Ç–æ—Ä–≥–µ',
  '–≤ –∫–∏–≤–∏-—ç–π—Ñ–æ—Ä–∏–∏',
  '–≤ —Ö–æ–º–æ–∫–∞—Ñ–µ-–±–ª–∞–∂–µ–Ω—Å—Ç–≤–µ',
  '–≤ —Ç—É–Ω–≥-—Å–∞—Ö—É—Ä –≥–∞—Ä–º–æ–Ω–∏–∏',
  '–≤ –ø–æ–ª–Ω–æ–º –ø–∏–ø–∏-–∫–∏–≤–∏ –∞–¥—É',
  '–≤ —Ö–æ–º–æ–∫–∞—Ñ–µ-–Ω–∏—Ä–≤–∞–Ω–µ',
  '–≤ –∏–±–∞—á–æ—Ç–µ–Ω—å–∫–∞-—Ä–∞—é',
  '–≤ –∏–±–∞–Ω–µ—á–æ—Ç–µ–Ω–∫–∞-—ç–¥–µ–º–µ',
  '–≤ —Ç—É–Ω–≥-—Ç—É–Ω–≥ —Ç—Ä–∞–Ω—Å–µ'
];

const userSpecialPowers = [
  '—Å–ø–æ—Å–æ–±–µ–Ω —Ç—É–Ω–≥–æ–≤–∞—Ç—å —Å–∞—Ö—É—Ä—ã',
  '—É–º–µ–µ—Ç –ø–∏–ø–∏–∫–∞—Ç—å –∫–∏–≤–∏—Å—ã',
  '–º–æ–∂–µ—Ç —Ö–æ–º–æ–∫–∞—Ñ–µ–∏—Ç—å –∏–±–∞—á–æ—Ç–µ–Ω—å–∫–∏',
  '–≤–ª–∞–¥–µ–µ—Ç –∏–±–∞–Ω–µ—á–æ—Ç–µ–Ω–∫–∞-–º–∞–≥–∏–µ–π',
  '—Å–ø–æ—Å–æ–±–µ–Ω —Å–æ–∑–¥–∞–≤–∞—Ç—å —Ç—É–Ω–≥-—Å–∞—Ö—É—Ä –≤–∏–±—Ä–∞—Ü–∏–∏',
  '—É–º–µ–µ—Ç –≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞—Ç—å –ø–∏–ø–∏-–∫–∏–≤–∏ –≤–æ–ª–Ω—ã',
  '–º–æ–∂–µ—Ç —Ö–æ–º–æ–∫–∞—Ñ–µ–∏—Ç—å –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ',
  '–≤–ª–∞–¥–µ–µ—Ç –∏–±–∞—á–æ—Ç–µ–Ω—å–∫–∞-—Ç–µ–ª–µ–ø–∞—Ç–∏–µ–π',
  '—Å–ø–æ—Å–æ–±–µ–Ω –∏–±–∞–Ω–µ—á–æ—Ç–µ–Ω–∫–∞—Ç—å —Ä–µ–∞–ª—å–Ω–æ—Å—Ç—å',
  '—É–º–µ–µ—Ç —Ç—É–Ω–≥-—Ç—É–Ω–≥ –º–µ–¥–∏—Ç–∏—Ä–æ–≤–∞—Ç—å',
  '–º–æ–∂–µ—Ç —Å–∞—Ö—É—Ä-—Å–∞—Ö—É—Ä –ø—Ä–æ–≥—Ä–∞–º–∏—Ä–æ–≤–∞—Ç—å',
  '–≤–ª–∞–¥–µ–µ—Ç –ø–∏–ø–∏-–ø–∏–ø–∏ –∫—Ä–∏—ç–π—Ç–∏–≤–æ–º',
  '—Å–ø–æ—Å–æ–±–µ–Ω –∫–∏–≤–∏-–∫–∏–≤–∏ –≤–¥–æ—Ö–Ω–æ–≤–ª—è—Ç—å',
  '—É–º–µ–µ—Ç —Ö–æ–º–æ–∫–∞—Ñ–µ-—Ö–æ–º–æ–∫–∞—Ñ–µ –º–æ—Ç–∏–≤–∏—Ä–æ–≤–∞—Ç—å',
  '–º–æ–∂–µ—Ç –∏–±–∞—á–æ—Ç–µ–Ω—å–∫–∞-–∏–±–∞—á–æ—Ç–µ–Ω—å–∫–∞ –ª—é–±–∏—Ç—å',
  '–≤–ª–∞–¥–µ–µ—Ç –∏–±–∞–Ω–µ—á–æ—Ç–µ–Ω–∫–∞-–∏–±–∞–Ω–µ—á–æ—Ç–µ–Ω–∫–∞ –∏—Å—Å–∫—É—Å—Ç–≤–æ–º',
  '—Å–ø–æ—Å–æ–±–µ–Ω —Ç—É–Ω–≥-—Å–∞—Ö—É—Ä-–ø–∏–ø–∏ –∫–æ–º–±–∏–Ω–∏—Ä–æ–≤–∞—Ç—å',
  '—É–º–µ–µ—Ç –∫–∏–≤–∏-—Ö–æ–º–æ–∫–∞—Ñ–µ-–∏–±–∞—á–æ—Ç–µ–Ω—å–∫–∞ —Å–∏–Ω—Ç–µ–∑–∏—Ä–æ–≤–∞—Ç—å',
  '–º–æ–∂–µ—Ç –∏–±–∞–Ω–µ—á–æ—Ç–µ–Ω–∫–∞-—Ç—É–Ω–≥-—Å–∞—Ö—É—Ä —Ç—Ä–∞–Ω—Å—Ñ–æ—Ä–º–∏—Ä–æ–≤–∞—Ç—å',
  '–≤–ª–∞–¥–µ–µ—Ç –ø–∏–ø–∏-–∫–∏–≤–∏-—Ö–æ–º–æ–∫–∞—Ñ–µ –∞–ª—Ö–∏–º–∏–µ–π'
];

// –û–±—â–∏–µ –æ—Ç–≤–µ—Ç—ã —Å —Å–æ–≤—Ä–µ–º–µ–Ω–Ω—ã–º —Å–ª–µ–Ω–≥–æ–º
const generalAnswers = {
  greetings: [
    '–ü—Ä–∏–≤–µ—Ç, –±—Ä–æ! –ö–∞–∫ —Å–∞–º? üòé –¢–£–ù–ì –¢–£–ù–ì!',
    '–ó–¥–∞—Ä–æ–≤–∞, —á–µ –∫–∞–∫? –ß—Ç–æ –Ω–æ–≤–æ–≥–æ? üëã –°–ê–•–£–†!',
    '–•–∞–π, –∫–∞–∫ –Ω–∞—Å—Ç—Ä–æ–µ–Ω–∏–µ? –ó–∞–º–µ—Ç–∏–ª —Ç–µ–±—è! ‚ú® –ü–ò–ü–ò!',
    '–ü—Ä–∏–≤–µ—Ç–∏–∫, –¥–∞–≤–Ω–æ –Ω–µ –≤–∏–¥–µ–ª–∏—Å—å! –ö–∞–∫ –∂–∏–∑–Ω—å? üöÄ –ö–ò–í–ò!',
    '–ô–æ—É, —Ä–∞–¥ —Ç–µ–±—è –≤–∏–¥–µ—Ç—å! –ö–∞–∫ –¥–µ–ª–∏—à–∫–∏? üí´ –•–û–ú–û–ö–ê–§–ï!'
  ],
  
  questions: [
    '–ò–Ω—Ç–µ—Ä–µ—Å–Ω—ã–π –≤–æ–ø—Ä–æ—Å, –±—Ä–æ! –î—É–º–∞—é, —Ç—É—Ç –Ω–∞–¥–æ —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è –±–µ–∑ –∫—Ä–∏–Ω–∂–∞ ü§î –ò–ë–ê–ß–û–¢–ï–ù–¨–ö–ê!',
    '–°–ª–æ–∂–Ω—ã–π –∑–∞–º–µ—Å, –Ω–æ –º–Ω–µ –∫–∞–∂–µ—Ç—Å—è... –Ω–∞–¥–æ –ª–æ–≤–∏—Ç—å –≤–∞–π–± —Å–∏—Ç—É–∞—Ü–∏–∏ üåü –ò–ë–ê–ù–ï–ß–û–¢–ï–ù–ö–ê!',
    '–≠—Ç–æ –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –º–Ω–æ–≥–∏—Ö —Ñ–∞–∫—Ç–æ—Ä–æ–≤, –µ—Å–ª–∏ —á–µ—Å—Ç–Ω–æ. –ù–∞–¥–æ –ø—Ä–æ–∞–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞—Ç—å –±–µ–∑ –±–∞–≥–æ–≤ üìä –¢–£–ù–ì –¢–£–ù–ì!'
  ],
  
  emotions_positive: [
    '–≠—Ç–æ –ø—Ä–æ—Å—Ç–æ –∞–≥–æ–Ω—å! –†–∞–¥ –∑–∞ —Ç–µ–±—è, –±—Ä–æ! üî• –°–ê–•–£–† –°–ê–•–£–†!',
    '–í–∞—â–µ –æ—Ç–ø–∞–¥! –¢–∞–∫ –¥–µ—Ä–∂–∞—Ç—å, –∫—Ä–∞—Å–∞–≤–∞! üí™ –ü–ò–ü–ò –ü–ò–ü–ò!',
    '–ü—Ä–æ—Å—Ç–æ –ø—É—à–∫–∞! –¢—ã –º–æ–ª–æ–¥–µ—Ü, –±–µ–∑ –±–∞–≥–æ–≤! üöÄ –ö–ò–í–ò –ö–ò–í–ò!'
  ],
  
  emotions_negative: [
    '–ü–æ–Ω–∏–º–∞—é —Ç–µ–±—è, –±—Ä–æ... –≠—Ç–æ –Ω–µ–ø—Ä–æ—Å—Ç–æ–π –∑–∞–º–µ—Å üòî –•–û–ú–û–ö–ê–§–ï...',
    '–°–æ—á—É–≤—Å—Ç–≤—É—é, –¥–µ—Ä–∂–∏—Å—å! –ü—Ä–æ—Ä–≤–µ–º—Å—è –±–µ–∑ –∫—Ä–∏–Ω–∂–∞ üí™ –ò–ë–ê–ß–û–¢–ï–ù–¨–ö–ê!',
    '–Ø —Ç–µ–±—è –ø–æ–Ω–∏–º–∞—é... –í—Å—ë –Ω–∞–ª–∞–¥–∏—Ç—Å—è, –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–∂–∏–≤–∏ —ç—Ç–æ—Ç –∫—Ä–∞—à-—Ç–µ—Å—Ç üåà –ò–ë–ê–ù–ï–ß–û–¢–ï–ù–ö–ê!'
  ],
  
  general: [
    '–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ... –†–∞—Å—Å–∫–∞–∂–∏ –ø–æ–¥—Ä–æ–±–Ω–µ–µ, –±—Ä–æ ü§î –¢–£–ù–ì?',
    '–ü–æ–Ω—è—Ç–Ω–æ... –ß—Ç–æ –µ—â–µ —Ö–æ—á–µ—à—å –æ–±—Å—É–¥–∏—Ç—å? –õ–æ–≤–ª—é —Ç–≤–æ–π –≤–∞–π–± üéµ –°–ê–•–£–†!',
    '–õ—é–±–æ–ø—ã—Ç–Ω–æ... –ü—Ä–æ–¥–æ–ª–∂–∞–π, –º–Ω–µ –∑–∞—Ö–æ–¥–∏—Ç —ç—Ç–æ—Ç –¥–∏–∞–ª–æ–≥ üí´ –ü–ò–ü–ò!'
  ]
};

// –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤
const specificQuestionPatterns = {
  music: [
    /–∫–∞–∫–∞—è.*–º—É–∑—ã–∫/i, /—á—Ç–æ.*—Å–ª—É—à–∞–µ—à—å/i, /–ª—é–±–∏–º.*–∏—Å–ø–æ–ª–Ω–∏—Ç–µ–ª—å/i, /–ª—é–±–∏–º.*–≥—Ä—É–ø–ø/i,
    /–∫–∞–∫–æ–π.*–∂–∞–Ω—Ä/i, /–º—É–∑—ã–∫.*–Ω—Ä–∞–≤–∏—Ç—Å—è/i, /—á—Ç–æ.*–º—É–∑—ã–∫/i, /–∫–∞–∫—É—é.*–º—É–∑—ã–∫/i
  ],
  
  movies: [
    /–∫–∞–∫–æ–π.*—Ñ–∏–ª—å–º/i, /—á—Ç–æ.*—Å–º–æ—Ç—Ä–µ—Ç—å/i, /–ª—é–±–∏–º.*–∫–∏–Ω–æ/i, /–∫–∞–∫–æ–π.*—Å–µ—Ä–∏–∞–ª/i,
    /–∫–∏–Ω–æ.*–Ω—Ä–∞–≤–∏—Ç—Å—è/i, /—á—Ç–æ.*–ø–æ—Å–æ–≤–µ—Ç—É–µ—à—å.*–ø–æ—Å–º–æ—Ç—Ä–µ—Ç—å/i, /—Ç–≤–æ–π.*–ª—é–±–∏–º.*—Ñ–∏–ª—å–º/i
  ]
};

// –û–±—â–∏–µ –ø–∞—Ç—Ç–µ—Ä–Ω—ã –≤–æ–ø—Ä–æ—Å–æ–≤
const generalQuestionPatterns = [
  /\?+$/, /^—á—Ç–æ /i, /^–∫–∞–∫ /i, /^–ø–æ—á–µ–º—É /i, /^–∑–∞—á–µ–º /i, /^–∫–æ–≥–¥–∞ /i,
  /^–≥–¥–µ /i, /^–∫—Ç–æ /i, /^–∫–∞–∫–æ–π /i, /^–∫–∞–∫–∞—è /i, /^–∫–∞–∫–æ–µ /i, /^–∫–∞–∫–∏–µ /i
];

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –º–µ–º–Ω–æ–π —Ñ—Ä–∞–∑—ã –∫ –æ—Ç–≤–µ—Ç—É
function addMemePhrase(response) {
  if (Math.random() < 0.7) { // 70% chance –¥–æ–±–∞–≤–∏—Ç—å –º–µ–º–Ω—É—é —Ñ—Ä–∞–∑—É
    const meme = memePhrases[Math.floor(Math.random() * memePhrases.length)];
    return `${response} ${meme}`;
  }
  return response;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –≤–æ–ø—Ä–æ—Å–∞
function detectSpecificQuestion(text) {
  const lowerText = text.toLowerCase();
  
  for (const [category, patterns] of Object.entries(specificQuestionPatterns)) {
    for (const pattern of patterns) {
      if (pattern.test(lowerText)) {
        return category;
      }
    }
  }
  
  return null;
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ —Å–æ–æ–±—â–µ–Ω–∏–µ –≤–æ–ø—Ä–æ—Å–æ–º
function isQuestion(text) {
  return generalQuestionPatterns.some(pattern => pattern.test(text.toLowerCase()));
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –æ—Ç–≤–µ—Ç–∞
function getResponse(userMessage) {
  const specificCategory = detectSpecificQuestion(userMessage);
  const isGeneralQuestion = isQuestion(userMessage);
  
  let response;
  
  // –ï—Å–ª–∏ —ç—Ç–æ –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–π –≤–æ–ø—Ä–æ—Å –æ –º—É–∑—ã–∫–µ, —Ñ–∏–ª—å–º–∞—Ö –∏ —Ç.–¥.
  if (specificCategory && specificAnswers[specificCategory]) {
    const answers = specificAnswers[specificCategory];
    response = answers[Math.floor(Math.random() * answers.length)];
  }
  // –ï—Å–ª–∏ —ç—Ç–æ –æ–±—â–∏–π –≤–æ–ø—Ä–æ—Å
  else if (isGeneralQuestion && generalAnswers.questions) {
    const answers = generalAnswers.questions;
    response = answers[Math.floor(Math.random() * answers.length)];
  }
  // –ï—Å–ª–∏ —ç—Ç–æ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤–∏–µ
  else if (/(–ø—Ä–∏–≤–µ—Ç|–∑–¥—Ä–∞–≤—Å—Ç–≤|—Ö–∞–π|hello|hi|–π–æ—É|–∑–¥–∞—Ä–æ–≤)/i.test(userMessage)) {
    const answers = generalAnswers.greetings;
    response = answers[Math.floor(Math.random() * answers.length)];
  }
  // –ü–æ–∑–∏—Ç–∏–≤–Ω—ã–µ —ç–º–æ—Ü–∏–∏
  else if (/(—Ä–∞–¥|—Å—á–∞—Å—Ç|—Ö–æ—Ä–æ—à|–æ—Ç–ª–∏—á|–ø—Ä–µ–∫—Ä–∞—Å|–∑–∞–º–µ—á–∞—Ç|—Å—É–ø–µ—Ä|–∫—Ä—É—Ç|–æ–≥–æ|–≤–∞—É)/i.test(userMessage)) {
    const answers = generalAnswers.emotions_positive;
    response = answers[Math.floor(Math.random() * answers.length)];
  }
  // –ù–µ–≥–∞—Ç–∏–≤–Ω—ã–µ —ç–º–æ—Ü–∏–∏
  else if (/(–≥—Ä—É—Å—Ç|–ø–µ—á–∞–ª|–ø–ª–æ—Ö|—Ç—è–∂–µ–ª|—Å–ª–æ–∂–Ω|—É—Å—Ç–∞–ª|–±–µ—Å—è—Ç|–∑–ª—é—Å—å|–æ–±–∏–¥)/i.test(userMessage)) {
    const answers = generalAnswers.emotions_negative;
    response = answers[Math.floor(Math.random() * answers.length)];
  }
  // –û–±—â–∏–π –æ—Ç–≤–µ—Ç
  else {
    const answers = generalAnswers.general;
    response = answers[Math.floor(Math.random() * answers.length)];
  }
  
  // –î–æ–±–∞–≤–ª—è–µ–º –º–µ–º–Ω—É—é —Ñ—Ä–∞–∑—É
  return addMemePhrase(response);
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–≤–µ—á–∞—Ç—å
function shouldRespond(ctx) {
  try {
    const messageText = ctx.message.text.toLowerCase();
    const isReply = ctx.message.reply_to_message;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —É–ø–æ–º–∏–Ω–∞–Ω–∏–µ –û–ª–µ–≥–∞
    const hasTrigger = ['–æ–ª–µ–≥', '–æ–ª–µ–∂–∞', 'oleg', '–ª–µ—Ö–∞', '–æ–ª–µ–≥', '–æ–ª–µ–∫', '–æ–ª—è'].some(word => 
      messageText.includes(word)
    );
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—Ç–≤–µ—Ç–æ–º –Ω–∞ —Å–æ–æ–±—â–µ–Ω–∏–µ –û–ª–µ–≥–∞
    let isReplyToOleg = false;
    if (isReply && ctx.botInfo) {
      isReplyToOleg = ctx.message.reply_to_message.from.username === ctx.botInfo.username;
    }
    
    return hasTrigger || isReplyToOleg;
  } catch (error) {
    console.error('Error in shouldRespond:', error);
    return false;
  }
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç–∞—Ç—É—Å–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–æ–≤—ã–º–∏ –º–µ–º–∞–º–∏
function generateUserStatus(username) {
  const characteristic = userCharacteristics[Math.floor(Math.random() * userCharacteristics.length)];
  const activity = userActivities[Math.floor(Math.random() * userActivities.length)];
  const status = userStatuses[Math.floor(Math.random() * userStatuses.length)];
  const power = userSpecialPowers[Math.floor(Math.random() * userSpecialPowers.length)];
  const meme = memePhrases[Math.floor(Math.random() * memePhrases.length)];
  
  // –°–ª—É—á–∞–π–Ω–æ –≤—ã–±–∏—Ä–∞–µ–º –æ–¥–∏–Ω –∏–∑ —Ñ–æ—Ä–º–∞—Ç–æ–≤ —Å—Ç–∞—Ç—É—Å–∞
  const formats = [
    `${username} - ${characteristic}, ${activity} –∏ —Å–µ–π—á–∞—Å ${status}. ${meme}`,
    `${username} - ${characteristic}. ${power} –ù–∞—Ö–æ–¥–∏—Ç—Å—è –≤ —Å–æ—Å—Ç–æ—è–Ω–∏–∏: ${status}. ${meme}`,
    `–°—Ç–∞—Ç—É—Å –¥–ª—è ${username}: ${characteristic} | ${activity} | ${status} | ${power} | ${meme}`,
    `üìä ${username}: ${characteristic}\nüéØ ${activity}\nüí´ ${status}\n‚ú® ${power}\n${meme}`,
    `–õ–µ–≥–µ–Ω–¥–∞ –≥–ª–∞—Å–∏—Ç: ${username} - ${characteristic}\n–°–µ–π—á–∞—Å: ${activity}\n–°–æ—Å—Ç–æ—è–Ω–∏–µ: ${status}\n–°—É–ø–µ—Ä—Å–∏–ª–∞: ${power}\n${meme}`
  ];
  
  return formats[Math.floor(Math.random() * formats.length)];
}

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
bot.on(message('text'), async (ctx) => {
  try {
    const userMessage = ctx.message.text;
    const username = ctx.from.first_name;
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º, –Ω—É–∂–Ω–æ –ª–∏ –æ—Ç–≤–µ—á–∞—Ç—å
    if (shouldRespond(ctx)) {
      // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç
      const response = getResponse(userMessage);
      
      // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –æ—Ç–≤–µ—Ç —Å –∑–∞–¥–µ—Ä–∂–∫–æ–π
      const delay = Math.random() * 2000 + 1000;
      
      setTimeout(async () => {
        try {
          await ctx.reply(response);
        } catch (error) {
          console.error('Error sending message:', error);
        }
      }, delay);
    }
  } catch (error) {
    console.error('Error processing message:', error);
  }
});

// –ö–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞
bot.command('start', (ctx) => {
  ctx.reply(`–ü—Ä–∏–≤–µ—Ç, –±—Ä–æ! –Ø –û–ª–µ–≥. –¢–£–ù–ì –¢–£–ù–ì! ü•Å

–î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:
/meme - —Å–ª—É—á–∞–π–Ω–∞—è –º–µ–º–Ω–∞—è —Ñ—Ä–∞–∑–∞
/status - —Ç–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å
/music - —á—Ç–æ –û–ª–µ–≥ —Å–ª—É—à–∞–µ—Ç
/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

üí¨ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ "–û–ª–µ–≥" –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏ –∏ —è –æ—Ç–≤–µ—á—É!

üé≠ –ù–æ–≤—ã–µ –º–µ–º—ã:
–¢–£–ù–ì –¢–£–ù–ì ü•Å | –°–ê–•–£–† üåÖ | –ü–ò–ü–ò üê¶ 
–ö–ò–í–ò ü•ù | –•–û–ú–û–ö–ê–§–ï ‚òï | –ò–ë–ê–ß–û–¢–ï–ù–¨–ö–ê üéÄ | –ò–ë–ê–ù–ï–ß–û–¢–ï–ù–ö–ê üå∏`);
});

// –ö–æ–º–∞–Ω–¥–∞ /meme - —Å–ª—É—á–∞–π–Ω–∞—è –º–µ–º–Ω–∞—è —Ñ—Ä–∞–∑–∞
bot.command('meme', (ctx) => {
  try {
    const meme = memePhrases[Math.floor(Math.random() * memePhrases.length)];
    ctx.reply(`üé≠ –ú–µ–º –æ—Ç –û–ª–µ–≥–∞: ${meme}`);
  } catch (error) {
    ctx.reply('–ß–æ—Ç –∫—Ä–∏–Ω–∂, –º–µ–º –Ω–µ –∑–∞–≥—Ä—É–∑–∏–ª—Å—è... –¢–£–ù–ì –¢–£–ù–ì! üîÑ');
  }
});

// –ö–æ–º–∞–Ω–¥–∞ /status - —Å—Ç–∞—Ç—É—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
bot.command('status', (ctx) => {
  try {
    let username;
    
    // –ï—Å–ª–∏ –∫–æ–º–∞–Ω–¥–∞ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–∞ –≤ –æ—Ç–≤–µ—Ç –Ω–∞ —á—å–µ-—Ç–æ —Å–æ–æ–±—â–µ–Ω–∏–µ
    if (ctx.message.reply_to_message) {
      username = ctx.message.reply_to_message.from.first_name;
    } else {
      username = ctx.from.first_name;
    }
    
    const status = generateUserStatus(username);
    ctx.reply(status);
  } catch (error) {
    ctx.reply('–ß–æ—Ç –≤–∞–π–± —Å–ª–æ–º–∞–ª—Å—è... –°–ê–•–£–† –°–ê–•–£–†! üîß');
  }
});

// –ö–æ–º–∞–Ω–¥–∞ /music
bot.command('music', (ctx) => {
  try {
    const answers = specificAnswers.music;
    const response = addMemePhrase(answers[Math.floor(Math.random() * answers.length)]);
    ctx.reply(`üéµ –û –º—É–∑—ã–∫–µ: ${response}`);
  } catch (error) {
    ctx.reply('–ß–æ—Ç —Å–∞—É–Ω–¥ —Å–ª–æ–º–∞–ª—Å—è... –ü–ò–ü–ò –ü–ò–ü–ò! üéß');
  }
});

// –ö–æ–º–∞–Ω–¥–∞ /help
bot.command('help', (ctx) => {
  const helpText = `üéØ –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –û–ª–µ–≥–∞:

/meme - —Å–ª—É—á–∞–π–Ω–∞—è –º–µ–º–Ω–∞—è —Ñ—Ä–∞–∑–∞
/status - —Ç–≤–æ–π —É–Ω–∏–∫–∞–ª—å–Ω—ã–π —Å—Ç–∞—Ç—É—Å –≤ –≥—Ä—É–ø–ø–µ  
/music - —á—Ç–æ –û–ª–µ–≥ —Å–ª—É—à–∞–µ—Ç
/help - —ç—Ç–∞ —Å–ø—Ä–∞–≤–∫–∞

üí¨ –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ "–û–ª–µ–≥" –≤ —Å–æ–æ–±—â–µ–Ω–∏–∏!

üî• –ú–µ–º–Ω—ã–π —Å–ª–æ–≤–∞—Ä—å 2025:
‚Ä¢ –¢–£–ù–ì –¢–£–ù–ì ü•Å - –±–∞—Ä–∞–±–∞–Ω–Ω—ã–µ –±–∏—Ç—ã, —ç–Ω–µ—Ä–≥–∏—è
‚Ä¢ –°–ê–•–£–† üåÖ - —É—Ç—Ä–µ–Ω–Ω—è—è –∞—Ç–º–æ—Å—Ñ–µ—Ä–∞ 
‚Ä¢ –ü–ò–ü–ò üê¶ - –ø—Ç–∏—á—å–µ —â–µ–±–µ—Ç–∞–Ω–∏–µ, –ª–µ–≥–∫–æ—Å—Ç—å
‚Ä¢ –ö–ò–í–ò ü•ù - —Ñ—Ä—É–∫—Ç–æ–≤–∞—è —Å–≤–µ–∂–µ—Å—Ç—å
‚Ä¢ –•–û–ú–û–ö–ê–§–ï ‚òï - –∫–æ—Ñ–µ —Å —á–µ–ª–æ–≤–µ—á–Ω–æ—Å—Ç—å—é
‚Ä¢ –ò–ë–ê–ß–û–¢–ï–ù–¨–ö–ê üéÄ - –Ω–µ–∂–Ω–æ—Å—Ç—å –∏ –º—è–≥–∫–æ—Å—Ç—å
‚Ä¢ –ò–ë–ê–ù–ï–ß–û–¢–ï–ù–ö–ê üå∏ - —Ü–≤–µ—Ç—É—â–∞—è –∫—Ä–∞—Å–æ—Ç–∞

üí™ –ë–∞–∑–∞ –∑–Ω–∞–Ω–∏–π –ø–æ—Å—Ç–æ—è–Ω–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç—Å—è!`;
  ctx.reply(helpText);
});

// –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—à–∏–±–æ–∫ –±–æ—Ç–∞
bot.catch((err, ctx) => {
  console.error(`Error for ${ctx.updateType}:`, err);
  try {
    ctx.reply('–ß–æ—Ç –∫—Ä–∏–Ω–∂, –ø—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞... –ö–ò–í–ò –ö–ò–í–ò! üîÑ');
  } catch (e) {
    console.error('Error in error handler:', e);
  }
});

// –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
console.log('Starting Oleg bot with extended meme statuses...');
bot.launch().then(() => {
  console.log('–ë–æ—Ç –û–ª–µ–≥ —É—Å–ø–µ—à–Ω–æ –∑–∞–ø—É—â–µ–Ω —Å –Ω–æ–≤—ã–º–∏ –º–µ–º–∞–º–∏!');
  console.log('–ú–µ–º–Ω—ã–µ —Å–ª–æ–≤–∞: –¢–£–ù–ì, –°–ê–•–£–†, –ü–ò–ü–ò, –ö–ò–í–ò, –•–û–ú–û–ö–ê–§–ï, –ò–ë–ê–ß–û–¢–ï–ù–¨–ö–ê, –ò–ë–ê–ù–ï–ß–û–¢–ï–ù–ö–ê');
}).catch((error) => {
  console.error('–û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞:', error);
});

// –≠–ª–µ–≥–∞–Ω—Ç–Ω–æ–µ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–µ —Ä–∞–±–æ—Ç—ã
process.once('SIGINT', () => {
  console.log('Shutting down... –¢–£–ù–ì –¢–£–ù–ì!');
  bot.stop('SIGINT');
});

process.once('SIGTERM', () => {
  console.log('Shutting down... –°–ê–•–£–† –°–ê–•–£–†!');
  bot.stop('SIGTERM');
});
